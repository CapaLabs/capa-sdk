name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches-ignore:
      - 'staging'
      - 'production'
    paths-ignore:
      - '.github/**'
      - 'docs/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  install-deps:
    if: ${{ !github.event.pull_request.draft }}
    name: Install dependencies
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 8
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache dependencies
        id: cache-node-dependencies
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-${{ matrix.node-version }}
      - name: Install dependencies
        if: steps.cache-node-dependencies.outputs.cache-hit != 'true'
        run: pnpm install

  type-check:
    if: ${{ !github.event.pull_request.draft && success()}}
    name: Type check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    needs:
      - install-deps

    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 8
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Load cached dependencies
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-${{ matrix.node-version }}

      - name: Type check
        run: pnpm run build:check

  build:
    if: ${{ !github.event.pull_request.draft && success()}}
    name: Build package
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    needs:
      - install-deps

    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 8
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Load cached dependencies
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-${{ matrix.node-version }}

      - name: Build
        run: pnpm run build

      - name: Verify build output
        run: |
          echo "Checking build output structure..."
          ls -la dist/
          ls -la dist/v2/
          echo "Checking for required files..."
          test -f dist/index.js
          test -f dist/index.d.ts
          test -f dist/v2/index.js
          test -f dist/v2/index.d.ts
          echo "âœ… All required files present"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-output-${{ matrix.node-version }}
          path: dist/
          retention-days: 7

  test:
    if: ${{ !github.event.pull_request.draft && success()}}
    name: Run tests
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      matrix:
        node-version: [20.x]
    needs:
      - install-deps
      - build

    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 8
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Load cached dependencies
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-${{ matrix.node-version }}

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-output-20.x
          path: dist/

      - name: Run integration tests
        run: pnpm run test:integration

      - name: Test package structure
        run: pnpm run test:package

      - name: Test package exports
        run: pnpm run test:unpacked

  publish-preview:
    if: ${{ !github.event.pull_request.draft && success() && github.base_ref == 'develop' }}
    name: Publish preview package
    runs-on: ubuntu-latest
    needs:
      - install-deps
      - type-check
      - build
      - test

    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 8
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'
      - name: Load cached dependencies
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-20.x-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-20.x

      - name: Build package
        run: pnpm run build

      - name: Publish preview package
        run: pnpm publish --tag preview --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
